// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  document  String?
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  campaigns Campaign[]
  donations Donation[]
}

model Campaign {
  id           String   @id @default(uuid())
  title        String
  description  String?
  goalAmount   Decimal
  raisedAmount Decimal  @default(0)
  deadline     DateTime
  userId       String
  bannerUrl    String?
  bannerType   String? // video ou image
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())

  user      User       @relation(fields: [userId], references: [id])
  contents  Content[]
  donations Donation[]
}

model Donation {
  id         String   @id @default(uuid())
  campaignId String
  userId     String? /// Opcional, caso o doador esteja logado
  email      String?
  amount     Decimal
  donorName  String?
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  campaign Campaign @relation(fields: [campaignId], references: [id])
  user     User?    @relation(fields: [userId], references: [id])
}

model Content {
  id          String   @id @default(uuid())
  campaignId  String
  title       String?
  body        String?
  contentType String?
  createdAt   DateTime @default(now())

  campaign Campaign @relation(fields: [campaignId], references: [id])
}
